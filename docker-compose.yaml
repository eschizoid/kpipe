services:

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    healthcheck:
      test: [ "CMD", "zkServer.sh", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: bitnami/kafka:3.4.1
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS=60000
    volumes:
      - kafka_data:/bitnami/kafka
      - ./scripts:/scripts
    command: [ "/scripts/wait-for-it.sh", "zookeeper:2181", "-t", "60", "--", "/opt/bitnami/scripts/kafka/entrypoint.sh", "/opt/bitnami/scripts/kafka/run.sh" ]
    depends_on:
      - zookeeper
    restart: on-failure

  kafka-consumer-app:
    build: .
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CONSUMER_GROUP=kpipe-group
      - KAFKA_TOPIC=json-topic
      - APP_NAME=kafka-consumer-app
    depends_on:
      - kafka
    restart: unless-stopped

  kafka-init:
    image: bitnami/kafka:3.4.1
    depends_on:
      - kafka
    command: >
      sh -c "
        echo 'Waiting for Kafka to be ready...' &&
        sleep 30 &&
        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --partitions 3 --replication-factor 1 --topic json-topic &&
        echo 'Topic created successfully'
      "
    restart: on-failure

volumes:
  zookeeper_data:
  kafka_data: